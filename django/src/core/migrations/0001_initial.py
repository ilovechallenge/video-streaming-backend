# Generated by Django 4.2.8 on 2024-01-23 03:05

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BrowsingHistory',
            fields=[
                ('browsing_history_id', models.UUIDField(db_column='browsing_history_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(blank=True, db_column='user_id', max_length=32, null=True)),
                ('delete_flg', models.BooleanField(db_column='delete_flg', default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
            ],
            options={
                'verbose_name_plural': 'Browsing History',
                'db_table': 'browsing_history',
            },
        ),
        migrations.CreateModel(
            name='CategoryBox',
            fields=[
                ('category_id', models.AutoField(db_column='category_id', primary_key=True, serialize=False)),
                ('category', models.CharField(db_column='category', max_length=50)),
                ('category_japanese', models.CharField(db_column='category_japanese', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
            ],
            options={
                'verbose_name_plural': 'Category Boxes',
                'db_table': 'category_box',
            },
        ),
        migrations.CreateModel(
            name='GradeBox',
            fields=[
                ('grade_id', models.AutoField(db_column='grade_id', primary_key=True, serialize=False)),
                ('grade', models.CharField(db_column='grade', max_length=20)),
                ('grade_japanese', models.CharField(db_column='grade_japanese', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.categorybox')),
            ],
            options={
                'verbose_name_plural': 'Grade Boxes',
                'db_table': 'grade_box',
            },
        ),
        migrations.CreateModel(
            name='UnitBox',
            fields=[
                ('unit_id', models.AutoField(db_column='unit_id', primary_key=True, serialize=False)),
                ('unit', models.CharField(db_column='unit', max_length=100)),
                ('content', models.CharField(db_column='content', max_length=1000, null=True)),
                ('is_classic', models.BooleanField(db_column='is_classic', default=False)),
                ('classic_type', models.CharField(db_column='classic_type', max_length=30, null=True)),
                ('order', models.IntegerField(db_column='order', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('grade', models.ForeignKey(db_column='grade', on_delete=django.db.models.deletion.CASCADE, to='core.gradebox')),
            ],
            options={
                'verbose_name_plural': 'Unit Boxes',
                'db_table': 'unit_box',
            },
        ),
        migrations.CreateModel(
            name='VideoBox',
            fields=[
                ('video_id', models.AutoField(db_column='video_id', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', default='No Title', max_length=30)),
                ('content', models.CharField(db_column='content', default='No Content', max_length=200)),
                ('media_url', models.FileField(db_column='media_url', default='', max_length=200, upload_to='')),
                ('caption_url', models.FileField(db_column='caption_url', default='', max_length=200, upload_to='')),
                ('hls_url', models.CharField(db_column='hls_url', default='', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('category', models.ForeignKey(db_column='category', on_delete=django.db.models.deletion.CASCADE, to='core.categorybox')),
                ('grade', models.ForeignKey(db_column='grade', on_delete=django.db.models.deletion.CASCADE, to='core.gradebox')),
                ('unit', models.ForeignKey(db_column='unit', on_delete=django.db.models.deletion.CASCADE, to='core.unitbox')),
            ],
            options={
                'verbose_name_plural': 'Video Boxes',
                'db_table': 'video_box',
            },
        ),
        migrations.CreateModel(
            name='WordBox',
            fields=[
                ('word_id', models.UUIDField(db_column='word_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_column='user_id', max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('video', models.ForeignKey(db_column='video', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.videobox')),
            ],
            options={
                'verbose_name_plural': 'Word Boxes',
                'db_table': 'word_box',
            },
        ),
        migrations.CreateModel(
            name='StampHistory',
            fields=[
                ('stamp_history_id', models.UUIDField(db_column='stamp_history_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('want_to_know_stamp_1', models.IntegerField(blank=True, db_column='want_to_know_stamp_1', null=True)),
                ('want_to_know_stamp_2', models.IntegerField(blank=True, db_column='want_to_know_stamp_2', null=True)),
                ('want_to_know_stamp_3', models.IntegerField(blank=True, db_column='want_to_know_stamp_3', null=True)),
                ('i_see_stamp_1', models.IntegerField(blank=True, db_column='i_see_stamp_1', null=True)),
                ('i_see_stamp_2', models.IntegerField(blank=True, db_column='i_see_stamp_2', null=True)),
                ('i_see_stamp_3', models.IntegerField(blank=True, db_column='i_see_stamp_3', null=True)),
                ('want_to_tell_stamp_1', models.IntegerField(blank=True, db_column='want_to_tell_stamp_1', null=True)),
                ('want_to_tell_stamp_2', models.IntegerField(blank=True, db_column='want_to_tell_stamp_2', null=True)),
                ('want_to_tell_stamp_3', models.IntegerField(blank=True, db_column='want_to_tell_stamp_3', null=True)),
                ('delete_flg', models.BooleanField(db_column='delete_flg', default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('browsing_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.browsinghistory')),
            ],
            options={
                'verbose_name_plural': 'Stamp History',
                'db_table': 'stamp_history',
            },
        ),
        migrations.CreateModel(
            name='StampBox',
            fields=[
                ('stamp_id', models.UUIDField(db_column='stamp_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('best_stamps', models.TextField(blank=True, db_column='best_stamps', null=True)),
                ('good_stamps', models.TextField(blank=True, db_column='good_stamps', null=True)),
                ('normal_stamps', models.TextField(blank=True, db_column='normal_stamps', null=True)),
                ('question', models.CharField(blank=True, db_column='question', max_length=500, null=True)),
                ('user_id', models.CharField(blank=True, db_column='user_id', max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.videobox')),
            ],
            options={
                'verbose_name_plural': 'Stamp Boxes',
                'db_table': 'stamp_box',
            },
        ),
        migrations.AddField(
            model_name='browsinghistory',
            name='video',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.videobox'),
        ),
        migrations.CreateModel(
            name='AnswerTextHistory',
            fields=[
                ('answer_text_history_id', models.UUIDField(db_column='answer_text_history_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stroke', models.TextField(blank=True, db_column='stroke', null=True)),
                ('stroke_text', models.TextField(blank=True, db_column='stroke_text', null=True)),
                ('keyboard_text', models.TextField(blank=True, db_column='keyboard_text', null=True)),
                ('delete_flg', models.BooleanField(db_column='delete_flg', default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('browsing_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.browsinghistory')),
            ],
            options={
                'verbose_name_plural': 'Answer Text History',
                'db_table': 'answer_text_history',
            },
        ),
    ]
